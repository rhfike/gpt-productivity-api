openapi: 3.0.0
info:
  title: Google Productivity API
  version: 1.2.0
servers:
  - url: https://www.googleapis.com
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
security:
  - bearerAuth: []
paths:
  /calendar/v3/calendars/{calendarId}/events:
    post:
      summary: Create a calendar event
      operationId: createEvent
      parameters:
        - name: calendarId
          in: path
          required: true
          schema:
            type: string
            default: primary
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                summary: { type: string }
                description: { type: string }
                start:
                  type: object
                  properties:
                    dateTime: { type: string, format: date-time }
                    timeZone: { type: string }
                end:
                  type: object
                  properties:
                    dateTime: { type: string, format: date-time }
                    timeZone: { type: string }
                attendees:
                  type: array
                  items:
                    type: object
                    properties:
                      email: { type: string }
                reminders:
                  type: object
                  properties:
                    useDefault: { type: boolean }
                    overrides:
                      type: array
                      items:
                        type: object
                        properties:
                          method:
                            type: string
                            enum: [popup, email]
                          minutes: { type: integer }
              required: [summary, start, end]
      responses:
        '200':
          description: Event created.
    get:
      summary: List events in a time window
      operationId: listEvents
      parameters:
        - name: calendarId
          in: path
          required: true
          schema:
            type: string
            default: primary
        - name: timeMin
          in: query
          required: true
          schema:
            type: string
            format: date-time
        - name: timeMax
          in: query
          required: true
          schema:
            type: string
            format: date-time
        - name: singleEvents
          in: query
          schema:
            type: boolean
            default: true
        - name: orderBy
          in: query
          schema:
            type: string
            default: startTime
      responses:
        '200':
          description: Events returned.

  /calendar/v3/freeBusy:
    post:
      summary: Check availability (free/busy)
      operationId: checkAvailability
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                timeMin: { type: string, format: date-time }
                timeMax: { type: string, format: date-time }
                items:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        description: Calendar ID (use 'primary' for default)
                        default: primary
              required: [timeMin, timeMax, items]
      responses:
        '200':
          description: Free/busy information returned.

  /tasks/v1/lists/{tasklist}/tasks:
    post:
      summary: Create a Google Task
      operationId: createTask
      parameters:
        - name: tasklist
          in: path
          required: true
          schema:
            type: string
            default: '@default'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title: { type: string }
                notes: { type: string }
                due:
                  type: string
                  format: date-time
              required: [title]
      responses:
        '200':
          description: Task created.
    get:
      summary: List Google Tasks
      operationId: listTasks
      parameters:
        - name: tasklist
          in: path
          required: true
          schema:
            type: string
            default: '@default'
        - name: dueMin
          in: query
          schema:
            type: string
            format: date-time
        - name: dueMax
          in: query
          schema:
            type: string
            format: date-time
        - name: showCompleted
          in: query
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Tasks returned.
